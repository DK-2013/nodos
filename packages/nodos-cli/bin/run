#!/usr/bin/env node

const yargs = require('yargs');
const yeoman = require('yeoman-environment');
const env = yeoman.createEnv();

env.register(require.resolve('../dist/'), 'newapp');
env.register(require.resolve('../../nodos-generators/dist/tasks'), 'create');

const commands = {
  new: {
    command: 'new <appPath>',
    builder: (command) => {
      command.positional('appPath', {
        describe: 'Path to the application',
      });
    },
    handler: (argv) => {
      env.run(`newapp ${argv.appPath}`);
    },
  },
  create: {
    command: 'generate <type> <name>',
    type: 'array',
    builder: (command) => {
      command.positional('type', {
        describe: 'what you need to create (right now works only for controller)',
      });
      command.positional('name', {
        describe: 'name of entity',
      });
    },
    handler: ({ type, name }) => {
      env.run(`create ${type} ${name}`);
    },
  },
};

const help = `
The 'nodos new' command creates a new Nodos application with a default
directory structure and configuration at the path you specify.
`;

const example = `
nodos new ~/Code/Node/weblog

This generates a skeletal Nodos installation in ~/Code/Nodos/weblog.
`;

yargs // eslint-disabled no-unused-expressions
  .demandCommand()
  .recommendCommands()
  .strict()
  .showHelpOnFail(true)
  .command(commands.new)
  .command(commands.create)
  .option('verbose', {
    alias: 'v',
    default: false,
  })
  .epilog(help.trim())
  .example(example.trim())
  .argv;
